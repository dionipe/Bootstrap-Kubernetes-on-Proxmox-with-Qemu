---
- hosts: k8s_master
  gather_facts: False
  tasks:
      - name: Including the variables.
        include_vars:
            file: ../../vars.yml
  
      - name: Initializing Kubernetes on the master.
        become: yes
        shell: kubeadm init --pod-network-cidr={{ calico_cidr }}/16 --ignore-preflight-errors=all
  
      - name: Creating a kube directory on the master for the config files.
        become: yes
        file: 
            path: $HOME/.kube
            state: directory
  
      - name: Copying the kube config to the kube directory.
        become: yes
        shell: cp /etc/kubernetes/admin.conf $HOME/.kube/config
  
      - name: Downloading the Calico Pod Network manifest.
        get_url: 
            url: "{{ calico_policy_url }}"
            dest: /tmp/calico.yml
  
      - name: Modifying the Pod network CIDR for Calico.
        replace:
            path: /tmp/calico.yml
            regexp: 192.168.0.0
            replace: "{{ calico_cidr }}"
  
      - name: Applying the Calico Pod Network to Kubernetes.
        become: yes
        shell: kubectl apply -f /tmp/calico.yml
  
      - name: Deleting the Calico Pod Network manifest from disk.
        file: 
            path: /tmp/calico.yml
            state: absent
  
      - name: Configuring RBAC for the personal Service Account.
        become: yes
        k8s:
            definition: "{{ lookup('template', '../../files/templates/Service_Account/{{ item }}') | from_yaml }}"
        with_items: 
            - "sa_personal.yml.j2"
            - "rb_personal.yml.j2" 
  
      - name: Retrieving the authentication token for your service user.
        become: yes
        shell: kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep {{ k8s_user_name }} | awk '{print $1}') | grep 'token:' | awk '{print $2}'
        register: k8s_user_token 
  
      - name: Retreiving the kube config.
        become: yes
        shell: cat ~/.kube/config
        register: k8s_config
  
      - name: Creating a local ~/.kube directory on your workstation.
        local_action:
            module: file
            path: ~/.kube
            state: directory
  
      - name: Copying authentication token to your workstation.
        local_action: copy content={{ k8s_user_token.stdout }} dest=~/.kube/authentication_token
  
      - name: Copying ~/.kube/config to your workstation.
        local_action: copy content={{ k8s_config.stdout }} dest=~/.kube/config
  
      - name: Retreiving the kubeadm join command.
        become: yes
        shell: kubeadm token create --print-join-command
        when: k8s_join_command is undefined
        register: k8s_join_command


- hosts: k8s_nodes
  gather_facts: False
  tasks:
      - name: Including the variables.
        include_vars:
            file: ../../vars.yml

      - name: Joining the nodes to the master.
        become: yes
        shell: "{{ hostvars[groups['k8s_master'][0]]['k8s_join_command']['stdout'] }} --ignore-preflight-errors=all"
